version: "3"
services:

  http_server:
    image: http_server
    ports:
      - "8081:8081"
    volumes:
      - .:/opt/app
    command: python start_happ.py
    env_file:
      - .env
    build: .
    depends_on:
      postgres:
        condition: service_started
      migrate:
        condition: service_completed_successfully

  grpc_server:
    image: grpc_server
    env_file:
      - .env
    volumes:
      - .:/opt/app
    depends_on:
      postgres:
        condition: service_started
      migrate:
        condition: service_completed_successfully
    ports:
      - "8082:8082"
    command: python start_gapp.py
    build: .

    
  grpc_client:
    image: grpc_client
    environment:
      GRPC_HOST: grpc_server
      GRPC_PORT: 8082
    command: python grpc_client.py
    build: .
    depends_on:
      grpc_server:
        condition: service_started

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password123123123
      - POSTGRES_DB=students
    ports:
      - "5432:5432"
    restart: always

  migrate:
    image: pymigrate
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password123123123
      - POSTGRES_DB=students
    build: 
      context: .
      dockerfile: Dockerfile.migrate
    depends_on:
      postgres:
        condition: service_started
